name: CI

on:
  push:
    branches: [master]

jobs:
  start_and_wait_scan:
    runs-on: ubuntu-18.04
    name: A job to run a Nexploit scan
    steps:
      - uses: actions/checkout@v2
      - run: |
          sudo apt update
          sudo curl -L "https://github.com/docker/compose/releases/download/1.26.0/docker-compose-$(uname -s)-$(uname -m)" -o /usr/local/bin/docker-compose
          sudo chmod +x /usr/local/bin/docker-compose
          sudo apt-get install nodejs-dev node-gyp libssl1.0-dev
          sudo apt-get install nodejs npm
          sudo npm install -g @neuralegion/nexploit-cli --unsafe-perm=true
      - name: Setup Python 3.7.13
        uses: actions/setup-python@v1
        with:
          python-version: 3.7.13
      - name: Install python deps
        run: |
          python -m pip install --upgrade pip
          pip install requests
      - name: Save environment variables
        run: |
          printf "NEXPLOIT_TOKEN=${{ secrets.NEXPLOIT_TOKEN }}\nREPEATER=${{ secrets.REPEATER }}\n" > .env
          cat .env
      - name: Get working directory
        run: pwd
      - name: Build Image Vuln App
        run: docker build -f Dockerfile -t vulnerable-app .
      - name: Run Docker Container deattached 
        run: docker run -d -p 5050:5050 vulnerable-app
      - name: Test App Connection 
        run: curl http://localhost:5050
      - name: Get working directory aftermath
        run: |
             pwd
             ls -la
      - name: Docker-Compose Neuralegion cli
        run: |
          sudo docker-compose --env-file=.env up -d
          sudo docker-compose config
      - run: sleep 30s
      - run: sudo docker-compose logs
      - name: Start Nexploit Scan üèÅ
        id: start
        run: |
          SCAN_ID=$(nexploit-cli scan:run                                                 \
            --test csrf dom_xss header_security secret_tokens open_buckets                 \
            --name "üíé BrokenCrystals for a '${GITHUB_REF##*/}' branch #${GITHUB_RUN_NUMBER}" \
            --crawler http://localhost:5050  \
            --repeater ${{ secrets.REPEATER }}                                            \
            --token ${{ secrets.NEXPLOIT_TOKEN }})
          echo "SCAN_ID=$SCAN_ID" >> $GITHUB_ENV
      - name: Get the output scan url üîó
        run: |
          printf "Scan was started with ID https://nexploit.app/scans/$SCAN_ID"
      - name: Wait for issues ‚è≥
        run: |
          nexploit-cli scan:polling               \
            --interval 30s                        \
            --timeout 30m                         \
            --token ${{ secrets.NEXPLOIT_TOKEN }} \
            --breakpoint medium_issue $SCAN_ID
      - name: Stop Scan üõë
        continue-on-error: true
        if: ${{ always() }}
        run: nexploit-cli scan:stop --token ${{ secrets.NEXPLOIT_TOKEN }} $SCAN_ID
